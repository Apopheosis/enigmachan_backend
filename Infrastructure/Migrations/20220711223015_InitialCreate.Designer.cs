// <auto-generated />
using System;
using System.Collections.Generic;
using Enigmachan.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace enigmachan_backend.Infrastructure.Migrations
{
    [DbContext(typeof(ThreadContext))]
    [Migration("20220711223015_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Enigmachan.Models.Post", b =>
                {
                    b.Property<int>("key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("key"));

                    b.Property<long>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("post_id"));

                    b.Property<long>("thread_id")
                        .HasColumnType("bigint");

                    b.HasKey("key");

                    b.HasIndex("post_id")
                        .IsUnique();

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Enigmachan.Models.Reply", b =>
                {
                    b.Property<long>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("post_id"));

                    b.Property<long?>("Threadpost_id")
                        .HasColumnType("bigint");

                    b.Property<string[]>("image_urls")
                        .HasColumnType("text[]");

                    b.Property<long>("mainPostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("postDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<string>>("replies")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("reply_to")
                        .HasColumnType("text[]");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.HasKey("post_id");

                    b.HasIndex("Threadpost_id");

                    b.HasIndex("post_id")
                        .IsUnique();

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("Enigmachan.Models.Thread", b =>
                {
                    b.Property<long>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("post_id"));

                    b.Property<int>("bumps")
                        .HasColumnType("integer");

                    b.Property<string[]>("image_urls")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTime>("postDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<string>>("replies")
                        .HasColumnType("text[]");

                    b.Property<List<string>>("reply_to")
                        .HasColumnType("text[]");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("post_id");

                    b.HasIndex("post_id")
                        .IsUnique();

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("Enigmachan.Models.Reply", b =>
                {
                    b.HasOne("Enigmachan.Models.Thread", null)
                        .WithMany("threadReplies")
                        .HasForeignKey("Threadpost_id");
                });

            modelBuilder.Entity("Enigmachan.Models.Thread", b =>
                {
                    b.Navigation("threadReplies");
                });
#pragma warning restore 612, 618
        }
    }
}
